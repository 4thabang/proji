name: build

on:
  push:
    branches:
      - 'master'
    tags:
      - 'v*'
  pull_request:

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    env:
      GO111MODULE: on
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up Snapcraft
        run: |
          sudo apt-get -yq --no-install-suggests --no-install-recommends install snapcraft
      -
        name: Set up sqlite3
        run: |
          sudo apt-get -yq --no-install-suggests --no-install-recommends install sqlite3  
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      -
        name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      -
        name: Download and generate modules
        run: |
          go mod download
          go generate -v ./...
      -
        name: CI
        run: |
          go build ./cmd/proji
          ./proji init
          go vet ./...
          go test -failfast -race -covermode=atomic -coverprofile=coverage.txt -timeout=5m ./pkg/...          
      -
        name: Upload coverage
        uses: codecov/codecov-action@v1
        with:          
          version: latest
          file: ./coverage.txt 
      -
        name: Snapcraft Login
        if: success() && startsWith(github.ref, 'refs/tags/v')
        env:
          SNAPCRAFT_LOGIN: ${{ secrets.SNAPCRAFT_LOGIN }}
        run: |
          snapcraft login --with <(echo "$SNAPCRAFT_LOGIN")
      -
        name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        if: success() && startsWith(github.ref, 'refs/tags/v')
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PROJI_TOKEN }}
        
